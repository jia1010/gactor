// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gameRpcServer.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StreamAgentMsg struct {
	ReqId                int32    `protobuf:"varint,1,opt,name=ReqId,proto3" json:"ReqId,omitempty"`
	ReqType              int32    `protobuf:"varint,2,opt,name=ReqType,proto3" json:"ReqType,omitempty"`
	FromActorId          string   `protobuf:"bytes,3,opt,name=FromActorId,proto3" json:"FromActorId,omitempty"`
	ToActorId            string   `protobuf:"bytes,4,opt,name=ToActorId,proto3" json:"ToActorId,omitempty"`
	Data                 []byte   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamAgentMsg) Reset()         { *m = StreamAgentMsg{} }
func (m *StreamAgentMsg) String() string { return proto.CompactTextString(m) }
func (*StreamAgentMsg) ProtoMessage()    {}
func (*StreamAgentMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_4747c30070216317, []int{0}
}

func (m *StreamAgentMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamAgentMsg.Unmarshal(m, b)
}
func (m *StreamAgentMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamAgentMsg.Marshal(b, m, deterministic)
}
func (m *StreamAgentMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamAgentMsg.Merge(m, src)
}
func (m *StreamAgentMsg) XXX_Size() int {
	return xxx_messageInfo_StreamAgentMsg.Size(m)
}
func (m *StreamAgentMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamAgentMsg.DiscardUnknown(m)
}

var xxx_messageInfo_StreamAgentMsg proto.InternalMessageInfo

func (m *StreamAgentMsg) GetReqId() int32 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *StreamAgentMsg) GetReqType() int32 {
	if m != nil {
		return m.ReqType
	}
	return 0
}

func (m *StreamAgentMsg) GetFromActorId() string {
	if m != nil {
		return m.FromActorId
	}
	return ""
}

func (m *StreamAgentMsg) GetToActorId() string {
	if m != nil {
		return m.ToActorId
	}
	return ""
}

func (m *StreamAgentMsg) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type StreamAgentRsp struct {
	ReqId                int32    `protobuf:"varint,1,opt,name=ReqId,proto3" json:"ReqId,omitempty"`
	FromActorId          string   `protobuf:"bytes,2,opt,name=FromActorId,proto3" json:"FromActorId,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamAgentRsp) Reset()         { *m = StreamAgentRsp{} }
func (m *StreamAgentRsp) String() string { return proto.CompactTextString(m) }
func (*StreamAgentRsp) ProtoMessage()    {}
func (*StreamAgentRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_4747c30070216317, []int{1}
}

func (m *StreamAgentRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamAgentRsp.Unmarshal(m, b)
}
func (m *StreamAgentRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamAgentRsp.Marshal(b, m, deterministic)
}
func (m *StreamAgentRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamAgentRsp.Merge(m, src)
}
func (m *StreamAgentRsp) XXX_Size() int {
	return xxx_messageInfo_StreamAgentRsp.Size(m)
}
func (m *StreamAgentRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamAgentRsp.DiscardUnknown(m)
}

var xxx_messageInfo_StreamAgentRsp proto.InternalMessageInfo

func (m *StreamAgentRsp) GetReqId() int32 {
	if m != nil {
		return m.ReqId
	}
	return 0
}

func (m *StreamAgentRsp) GetFromActorId() string {
	if m != nil {
		return m.FromActorId
	}
	return ""
}

func (m *StreamAgentRsp) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type StartActorReq struct {
	ActorId              string   `protobuf:"bytes,1,opt,name=actorId,proto3" json:"actorId,omitempty"`
	Timeout              int64    `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartActorReq) Reset()         { *m = StartActorReq{} }
func (m *StartActorReq) String() string { return proto.CompactTextString(m) }
func (*StartActorReq) ProtoMessage()    {}
func (*StartActorReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4747c30070216317, []int{2}
}

func (m *StartActorReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartActorReq.Unmarshal(m, b)
}
func (m *StartActorReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartActorReq.Marshal(b, m, deterministic)
}
func (m *StartActorReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartActorReq.Merge(m, src)
}
func (m *StartActorReq) XXX_Size() int {
	return xxx_messageInfo_StartActorReq.Size(m)
}
func (m *StartActorReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StartActorReq.DiscardUnknown(m)
}

var xxx_messageInfo_StartActorReq proto.InternalMessageInfo

func (m *StartActorReq) GetActorId() string {
	if m != nil {
		return m.ActorId
	}
	return ""
}

func (m *StartActorReq) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type StartActorRsp struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartActorRsp) Reset()         { *m = StartActorRsp{} }
func (m *StartActorRsp) String() string { return proto.CompactTextString(m) }
func (*StartActorRsp) ProtoMessage()    {}
func (*StartActorRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_4747c30070216317, []int{3}
}

func (m *StartActorRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartActorRsp.Unmarshal(m, b)
}
func (m *StartActorRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartActorRsp.Marshal(b, m, deterministic)
}
func (m *StartActorRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartActorRsp.Merge(m, src)
}
func (m *StartActorRsp) XXX_Size() int {
	return xxx_messageInfo_StartActorRsp.Size(m)
}
func (m *StartActorRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_StartActorRsp.DiscardUnknown(m)
}

var xxx_messageInfo_StartActorRsp proto.InternalMessageInfo

func (m *StartActorRsp) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*StreamAgentMsg)(nil), "StreamAgentMsg")
	proto.RegisterType((*StreamAgentRsp)(nil), "StreamAgentRsp")
	proto.RegisterType((*StartActorReq)(nil), "StartActorReq")
	proto.RegisterType((*StartActorRsp)(nil), "StartActorRsp")
}

func init() { proto.RegisterFile("gameRpcServer.proto", fileDescriptor_4747c30070216317) }

var fileDescriptor_4747c30070216317 = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xb1, 0x4e, 0xf3, 0x30,
	0x10, 0xc7, 0x3f, 0xb7, 0xcd, 0x57, 0x72, 0xa5, 0x45, 0x32, 0x0c, 0x51, 0xc5, 0x10, 0x65, 0x0a,
	0x4b, 0x84, 0xa8, 0x78, 0x80, 0x82, 0x04, 0xea, 0xc0, 0xe2, 0x74, 0x42, 0x2c, 0x26, 0x39, 0x45,
	0x0c, 0xc1, 0x8e, 0xed, 0x22, 0xf1, 0x1e, 0xbc, 0x05, 0x2f, 0x89, 0x72, 0x60, 0x35, 0x06, 0x31,
	0x30, 0x25, 0xff, 0xff, 0xdd, 0xfd, 0xee, 0xce, 0x36, 0x1c, 0x37, 0xb2, 0x45, 0xa1, 0xab, 0x12,
	0xcd, 0x0b, 0x9a, 0x42, 0x1b, 0xe5, 0x54, 0xf6, 0xc6, 0x60, 0x51, 0x3a, 0x83, 0xb2, 0x5d, 0x37,
	0xf8, 0xec, 0xee, 0x6c, 0xc3, 0x4f, 0x20, 0x12, 0xd8, 0x6d, 0xea, 0x84, 0xa5, 0x2c, 0x8f, 0xc4,
	0xa7, 0xe0, 0x09, 0x4c, 0x05, 0x76, 0xdb, 0x57, 0x8d, 0xc9, 0x88, 0x7c, 0x2f, 0x79, 0x0a, 0xb3,
	0x1b, 0xa3, 0xda, 0x75, 0xe5, 0x94, 0xd9, 0xd4, 0xc9, 0x38, 0x65, 0x79, 0x2c, 0x86, 0x16, 0x3f,
	0x85, 0x78, 0xab, 0x7c, 0x7c, 0x42, 0xf1, 0xbd, 0xc1, 0x39, 0x4c, 0x6a, 0xe9, 0x64, 0x12, 0xa5,
	0x2c, 0x3f, 0x14, 0xf4, 0x9f, 0x3d, 0x04, 0x53, 0x09, 0xab, 0x7f, 0x99, 0xea, 0x5b, 0xef, 0xd1,
	0xcf, 0xde, 0x9e, 0x3e, 0x1e, 0xd0, 0xaf, 0x61, 0x5e, 0x3a, 0x69, 0x1c, 0xe5, 0x08, 0xec, 0xfa,
	0xe5, 0xe4, 0x17, 0x82, 0x11, 0xc2, 0xcb, 0x3e, 0xe2, 0x9e, 0x5a, 0x54, 0x3b, 0x47, 0xf0, 0xb1,
	0xf0, 0x32, 0x3b, 0x0b, 0x20, 0x56, 0xf7, 0xa9, 0x76, 0x57, 0x55, 0x68, 0x2d, 0x41, 0x0e, 0x84,
	0x97, 0x17, 0xef, 0x0c, 0xe6, 0xb7, 0xc3, 0xc3, 0xe7, 0x2b, 0x88, 0x7b, 0x41, 0x2b, 0xf2, 0xa3,
	0x22, 0xbc, 0x81, 0x65, 0x60, 0x08, 0xab, 0xb3, 0x7f, 0x39, 0x3b, 0x67, 0xfc, 0x12, 0x66, 0xe4,
	0xfc, 0xb1, 0xac, 0x00, 0xd8, 0x0f, 0xca, 0x17, 0x45, 0xb0, 0xfa, 0x32, 0xd0, 0x7d, 0xcd, 0xd5,
	0xf4, 0x3e, 0xa2, 0xb7, 0xf1, 0xf8, 0x9f, 0x3e, 0xab, 0x8f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x96,
	0xe1, 0x35, 0x72, 0x39, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GameRpcServerClient is the client API for GameRpcServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GameRpcServerClient interface {
	// Rpc streaming
	RpcStream(ctx context.Context, opts ...grpc.CallOption) (GameRpcServer_RpcStreamClient, error)
	// Proxy streaming
	AgentStream(ctx context.Context, opts ...grpc.CallOption) (GameRpcServer_AgentStreamClient, error)
	// Start Actor
	StartActor(ctx context.Context, in *StartActorReq, opts ...grpc.CallOption) (*StartActorRsp, error)
}

type gameRpcServerClient struct {
	cc *grpc.ClientConn
}

func NewGameRpcServerClient(cc *grpc.ClientConn) GameRpcServerClient {
	return &gameRpcServerClient{cc}
}

func (c *gameRpcServerClient) RpcStream(ctx context.Context, opts ...grpc.CallOption) (GameRpcServer_RpcStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GameRpcServer_serviceDesc.Streams[0], "/GameRpcServer/RpcStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &gameRpcServerRpcStreamClient{stream}
	return x, nil
}

type GameRpcServer_RpcStreamClient interface {
	Send(*StreamAgentMsg) error
	Recv() (*StreamAgentRsp, error)
	grpc.ClientStream
}

type gameRpcServerRpcStreamClient struct {
	grpc.ClientStream
}

func (x *gameRpcServerRpcStreamClient) Send(m *StreamAgentMsg) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gameRpcServerRpcStreamClient) Recv() (*StreamAgentRsp, error) {
	m := new(StreamAgentRsp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *gameRpcServerClient) AgentStream(ctx context.Context, opts ...grpc.CallOption) (GameRpcServer_AgentStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GameRpcServer_serviceDesc.Streams[1], "/GameRpcServer/AgentStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &gameRpcServerAgentStreamClient{stream}
	return x, nil
}

type GameRpcServer_AgentStreamClient interface {
	Send(*StreamAgentMsg) error
	Recv() (*StreamAgentRsp, error)
	grpc.ClientStream
}

type gameRpcServerAgentStreamClient struct {
	grpc.ClientStream
}

func (x *gameRpcServerAgentStreamClient) Send(m *StreamAgentMsg) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gameRpcServerAgentStreamClient) Recv() (*StreamAgentRsp, error) {
	m := new(StreamAgentRsp)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *gameRpcServerClient) StartActor(ctx context.Context, in *StartActorReq, opts ...grpc.CallOption) (*StartActorRsp, error) {
	out := new(StartActorRsp)
	err := c.cc.Invoke(ctx, "/GameRpcServer/StartActor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GameRpcServerServer is the server API for GameRpcServer service.
type GameRpcServerServer interface {
	// Rpc streaming
	RpcStream(GameRpcServer_RpcStreamServer) error
	// Proxy streaming
	AgentStream(GameRpcServer_AgentStreamServer) error
	// Start Actor
	StartActor(context.Context, *StartActorReq) (*StartActorRsp, error)
}

// UnimplementedGameRpcServerServer can be embedded to have forward compatible implementations.
type UnimplementedGameRpcServerServer struct {
}

func (*UnimplementedGameRpcServerServer) RpcStream(srv GameRpcServer_RpcStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method RpcStream not implemented")
}
func (*UnimplementedGameRpcServerServer) AgentStream(srv GameRpcServer_AgentStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method AgentStream not implemented")
}
func (*UnimplementedGameRpcServerServer) StartActor(ctx context.Context, req *StartActorReq) (*StartActorRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartActor not implemented")
}

func RegisterGameRpcServerServer(s *grpc.Server, srv GameRpcServerServer) {
	s.RegisterService(&_GameRpcServer_serviceDesc, srv)
}

func _GameRpcServer_RpcStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GameRpcServerServer).RpcStream(&gameRpcServerRpcStreamServer{stream})
}

type GameRpcServer_RpcStreamServer interface {
	Send(*StreamAgentRsp) error
	Recv() (*StreamAgentMsg, error)
	grpc.ServerStream
}

type gameRpcServerRpcStreamServer struct {
	grpc.ServerStream
}

func (x *gameRpcServerRpcStreamServer) Send(m *StreamAgentRsp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gameRpcServerRpcStreamServer) Recv() (*StreamAgentMsg, error) {
	m := new(StreamAgentMsg)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _GameRpcServer_AgentStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GameRpcServerServer).AgentStream(&gameRpcServerAgentStreamServer{stream})
}

type GameRpcServer_AgentStreamServer interface {
	Send(*StreamAgentRsp) error
	Recv() (*StreamAgentMsg, error)
	grpc.ServerStream
}

type gameRpcServerAgentStreamServer struct {
	grpc.ServerStream
}

func (x *gameRpcServerAgentStreamServer) Send(m *StreamAgentRsp) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gameRpcServerAgentStreamServer) Recv() (*StreamAgentMsg, error) {
	m := new(StreamAgentMsg)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _GameRpcServer_StartActor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartActorReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameRpcServerServer).StartActor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GameRpcServer/StartActor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameRpcServerServer).StartActor(ctx, req.(*StartActorReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _GameRpcServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GameRpcServer",
	HandlerType: (*GameRpcServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartActor",
			Handler:    _GameRpcServer_StartActor_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RpcStream",
			Handler:       _GameRpcServer_RpcStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "AgentStream",
			Handler:       _GameRpcServer_AgentStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "gameRpcServer.proto",
}
